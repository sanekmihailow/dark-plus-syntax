import { ThemeColor } from "@types"

export const semanticTokenColors = {
    "newOperator":        ThemeColor.FlowControl,
    "stringLiteral":      ThemeColor.Strings,
    "customLiteral":      ThemeColor.Functions,
    "numberLiteral":      ThemeColor.Numbers,
    "operatorOverloaded": ThemeColor.FlowControl,

    "defaultLibrary": ThemeColor.Types,

    "*.abstract":      "#ff0000",
    "*.async":         "#ff0000",
    "*.declaration":   "#ff0000",
    "*.deprecated":    "#ff0000",
    "*.documentation": "#ff0000",
    "*.modification":  "#ff0000",
    "*.readonly":      "#ff0000",
    "*.static":        "#ff0000",

    "class":                 ThemeColor.Types,
    "comment":               ThemeColor.Comments,
    "controlKeyword":        "#ff0000",
    "decorator":             "#ff0000",
    "delegate":              "#ff0000",
    "enum":                  ThemeColor.Types,
    "enumMember":            "#ff0000",
    "event":                 "#ff0000",
    "excludedCode":          "#ff0000",
    "extensionMethod":       "#ff0000",
    "field":                 "#ff0000",
    "function":              ThemeColor.Functions,
    "interface":             ThemeColor.Types,
    "keyword":               ThemeColor.Keywords,
    "label":                 "#ff0000",
    "local":                 "#ff0000",
    "macro":                 "#ff0000",
    "method":                ThemeColor.Functions,
    "module":                ThemeColor.Types,
    "namespace":             ThemeColor.Types,
    "number":                ThemeColor.Numbers,
    "operator":              ThemeColor.FlowControl,
    "parameter":             ThemeColor.Variables,
    "plainKeyword":          "#ff0000",
    "preprocessorKeyword":   "#ff0000",
    "preprocessorText":      "#ff0000",
    "property":              "#ff0000",
    "punctuation":           ThemeColor.Noise,
    "string":                ThemeColor.Strings,
    "stringEscapeCharacter": ThemeColor.Chars,
    "stringVerbatim":        "#ff0000",
    "struct":                ThemeColor.Types,
    "type":                  ThemeColor.Types,
    "typeParameter":         ThemeColor.Types,
    "variable":              ThemeColor.Variables,

    "regexp":                    ThemeColor.RegExp,
    "regexAlternation":          "#ff0000",
    "regexAnchor":               "#ff0000",
    "regexCharacterClass":       "#ff0000",
    "regexComment":              "#ff0000",
    "regexGrouping":             "#ff0000",
    "regexOtherEscape":          "#ff0000",
    "regexQuantifier":           "#ff0000",
    "regexSelfEscapedCharacter": "#ff0000",

    "markupAttribute":          "#ff0000",
    "markupComment":            "#ff0000",
    "markupCommentPunctuation": "#ff0000",
    "markupElement":            "#ff0000",
    "markupOperator":           "#ff0000",
    "markupTagDelimiter":       "#ff0000",

    "razorComment":            "#ff0000",
    "razorDirective":          "#ff0000",
    "razorDirectiveAttribute": "#ff0000",
    "razorDirectiveColon":     "#ff0000",
    "razorTagHelperAttribute": "#ff0000",
    "razorTagHelperElement":   "#ff0000",
    "razorTransition":         "#ff0000",

    "xmlDocCommentAttributeName":         "#ff0000",
    "xmlDocCommentAttributeQuotes":       "#ff0000",
    "xmlDocCommentAttributeValue":        "#ff0000",
    "xmlDocCommentCDataSection":          "#ff0000",
    "xmlDocCommentComment":               "#ff0000",
    "xmlDocCommentDelimiter":             "#ff0000",
    "xmlDocCommentEntityReference":       "#ff0000",
    "xmlDocCommentName":                  "#ff0000",
    "xmlDocCommentProcessingInstruction": "#ff0000",
    "xmlDocCommentText":                  "#ff0000",

}
